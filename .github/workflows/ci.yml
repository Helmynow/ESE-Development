name: CI

on:
  push:
    branches: ["main"]
  pull_request:

permissions:
  contents: read
  pull-requests: write

jobs:
  quality:
    name: Quality Gates
    runs-on: ubuntu-latest
    env:
      PYTHONUNBUFFERED: "1"
      DATABASE_URL: sqlite:///./ci.db
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: backend/pyproject.toml

      - name: Install backend dependencies
        run: python -m pip install -e backend[dev]

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install frontend dependencies
        run: npm ci

      - name: Prepare artifact directories
        run: |
          mkdir -p artifacts/lint artifacts/coverage artifacts/security

      - name: Ruff
        run: python -m ruff check backend/app backend/tests | tee artifacts/lint/ruff.txt

      - name: Black
        run: python -m black --check backend/app backend/tests | tee artifacts/lint/black.txt

      - name: MyPy
        run: python -m mypy --config-file backend/pyproject.toml backend/app | tee artifacts/lint/mypy.txt

      - name: ESLint
        run: npm run lint | tee artifacts/lint/eslint.txt

      - name: Apply database migrations
        working-directory: backend
        run: alembic upgrade head

      - name: Pytest with coverage
        working-directory: backend
        run: |
          pytest -c pyproject.toml | tee ../artifacts/coverage/pytest.txt
          cp coverage.xml ../artifacts/coverage/python-coverage.xml

      - name: Bandit
        working-directory: backend
        run: python -m bandit -r app | tee ../artifacts/security/bandit.txt

      - name: pip-audit
        working-directory: backend
        run: python -m pip_audit --strict | tee ../artifacts/security/pip-audit.txt

      - name: Set up k6
        if: ${{ hashFiles('k6/smoke.js') != '' }}
        uses: grafana/setup-k6@v0.3.1

      - name: k6 smoke test
        if: ${{ hashFiles('k6/smoke.js') != '' }}
        run: k6 run k6/smoke.js | tee artifacts/coverage/k6.txt

      - name: Upload lint artefacts
        uses: actions/upload-artifact@v4
        with:
          name: lint-reports
          path: artifacts/lint
          if-no-files-found: error

      - name: Upload coverage artefacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: artifacts/coverage
          if-no-files-found: error

      - name: Upload security artefacts
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: artifacts/security
          if-no-files-found: error
